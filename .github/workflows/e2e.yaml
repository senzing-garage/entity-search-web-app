# This workflow will do a clean installation of node dependencies,
#  cache/restore them, build the source code and run tests across different
#  versions of node

name: E2E Tests

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  e2e:
    name: npm ci and run e2e
    outputs:
      status: ${{ job.status }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    timeout-minutes: 20

    steps:
      - name: checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: "0"

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Build App
        run: npm run build:e2e --if-present

      - name: Run Playwright tests
        run: npm run e2e:ci

      - name: Upload Artifact ${{ matrix.node-version }}
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 14
          overwrite: true

  slack-notification:
    needs: [e2e]
    if: ${{ always() && contains(fromJSON('["failure", "cancelled"]'), needs.e2e.outputs.status ) && github.ref_name == github.event.repository.default_branch }}
    secrets:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
    uses: senzing-factory/build-resources/.github/workflows/build-failure-slack-notification.yaml@v2
    with:
      job-status: ${{ needs.e2e.outputs.status }}
