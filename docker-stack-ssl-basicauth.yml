version: '3.3'
services:

  senzing-api-server:
    image: senzing/senzing-api-server:${SENZING_DOCKER_IMAGE_VERSION_SENZING_API_SERVER:-2.0.1}
    command:
      - -httpPort
      - "8080"
      - -bindAddr
      - all
      - -iniFile
      - /etc/opt/senzing/G2Module.ini
      - -allowedOrigins
      - "*"
      - -concurrency
      - "16"
    networks:
      - sz-api-network
    ports:
      - 8080:8080
    volumes:
      - ${SENZING_DATA_VERSION_DIR:-/opt/senzing/data/2.0.0}:/opt/senzing/data
      - ${SENZING_ETC_DIR:-/etc/opt/senzing}:/etc/opt/senzing
      - ${SENZING_G2_DIR:-/opt/senzing/g2}:/opt/senzing/g2
      - ${SENZING_VAR_DIR:-/var/opt/senzing}:/var/opt/senzing
    restart: 'on-failure'

  senzing-webapp:
    image: senzing/entity-search-web-app
    command: "start:docker"
    depends_on:
      - senzing-api-server
    environment:
      SENZING_API_SERVER_URL: "http://senzing-api-server:8080"
      SENZING_WEB_SERVER_PORT: 8080
      SENZING_WEB_SERVER_API_PATH: '/api'
      SENZING_WEB_SERVER_BASIC_AUTH_JSON: '/run/secrets/users.json'
    networks:
      - sz-api-network
    volumes:
      - '/app/node_modules'
    ports:
      - 8081:8080
    restart: 'always'
    secrets:
      - source: SZ_WEBAPP_SSL_CERT
        target: server.cert
        uid: '1001'
        gid: '1001'
      - source: SZ_WEBAPP_SSL_KEY
        target: server.key
        uid: '1001'
        gid: '1001'
      - source: SZ_WEBAPP_BASIC_AUTH_JSON
        target: users.json
        uid: '1001'
        gid: '1001'


networks:
  sz-api-network:

secrets:
  SZ_WEBAPP_SSL_CERT:
    file: '../CERTS/server.cert'
  SZ_WEBAPP_SSL_KEY:
    file: '../CERTS/server.key'
  SZ_WEBAPP_BASIC_AUTH_JSON:
    file: '../USERS/users.json'

